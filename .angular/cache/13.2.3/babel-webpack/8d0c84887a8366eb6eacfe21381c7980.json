{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n/**\n * @name Unique Device ID\n * @description\n * This plugin produces a unique, cross-install, app-specific device id.\n *\n * @usage\n * ```typescript\n * import { UniqueDeviceID } from '@ionic-native/unique-device-id';\n *\n * constructor(private uniqueDeviceID: UniqueDeviceID) { }\n *\n * ...\n *\n * this.uniqueDeviceID.get()\n *   .then((uuid: any) => console.log(uuid))\n *   .catch((error: any) => console.log(error));\n *\n * ```\n */\n\nvar UniqueDeviceID = function (_super) {\n  __extends(UniqueDeviceID, _super);\n\n  function UniqueDeviceID() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Gets a unique, cross-install, app-specific device id.\n   * @return {Promise<string>} Returns a promise that resolves when something happens\n   */\n\n  /**\n     * Gets a unique, cross-install, app-specific device id.\n     * @return {Promise<string>} Returns a promise that resolves when something happens\n     */\n\n\n  UniqueDeviceID.prototype.get =\n  /**\n  * Gets a unique, cross-install, app-specific device id.\n  * @return {Promise<string>} Returns a promise that resolves when something happens\n  */\n  function () {\n    return;\n  };\n\n  __decorate([Cordova(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Promise)], UniqueDeviceID.prototype, \"get\", null);\n  /**\n   * @name Unique Device ID\n   * @description\n   * This plugin produces a unique, cross-install, app-specific device id.\n   *\n   * @usage\n   * ```typescript\n   * import { UniqueDeviceID } from '@ionic-native/unique-device-id';\n   *\n   * constructor(private uniqueDeviceID: UniqueDeviceID) { }\n   *\n   * ...\n   *\n   * this.uniqueDeviceID.get()\n   *   .then((uuid: any) => console.log(uuid))\n   *   .catch((error: any) => console.log(error));\n   *\n   * ```\n   */\n\n\n  UniqueDeviceID = __decorate([Plugin({\n    pluginName: 'UniqueDeviceID',\n    plugin: 'cordova-plugin-uniquedeviceid',\n    pluginRef: 'window.plugins.uniqueDeviceID',\n    repo: 'https://github.com/Paldom/UniqueDeviceID',\n    platforms: ['Android', 'iOS', 'Windows Phone 8']\n  })], UniqueDeviceID);\n\n  UniqueDeviceID.ɵfac = /*@__PURE__*/function () {\n    var ɵUniqueDeviceID_BaseFactory;\n    return function UniqueDeviceID_Factory(t) {\n      return (ɵUniqueDeviceID_BaseFactory || (ɵUniqueDeviceID_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(UniqueDeviceID)))(t || UniqueDeviceID);\n    };\n  }();\n\n  UniqueDeviceID.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: UniqueDeviceID,\n    factory: function (t) {\n      return UniqueDeviceID.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return UniqueDeviceID;\n}(IonicNativePlugin);\n\nexport { UniqueDeviceID }; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module"}