{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport let FireStoreService = /*#__PURE__*/(() => {\n  class FireStoreService {\n    constructor(afs) {\n      this.afs = afs;\n      this.ideaCollection = this.afs.collection('athelete');\n      this.ideas = this.ideaCollection.snapshotChanges().pipe(map(actions => actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return Object.assign({\n          id\n        }, data);\n      })));\n    }\n\n    getIdeas() {\n      return this.ideas;\n    }\n\n    getIdea(id) {\n      return this.ideaCollection.doc(id).valueChanges().pipe(take(1), map(idea => {\n        idea.id = id;\n        return idea;\n      }));\n    }\n\n    addIdea(record) {\n      return this.ideaCollection.add(record);\n    }\n\n    updateIdea(idea) {\n      return this.ideaCollection.doc(idea.id).update({\n        name: idea.name,\n        notes: idea.notes\n      });\n    }\n\n    deleteIdea(id) {\n      return this.ideaCollection.doc(id).delete();\n    }\n\n  }\n\n  FireStoreService.ɵfac = function FireStoreService_Factory(t) {\n    return new (t || FireStoreService)(i0.ɵɵinject(i1.AngularFirestore));\n  };\n\n  FireStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FireStoreService,\n    factory: FireStoreService.ɵfac,\n    providedIn: 'root'\n  });\n  return FireStoreService;\n})();","map":null,"metadata":{},"sourceType":"module"}